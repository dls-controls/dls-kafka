replicaCount: 3

namespace: controls-kafka

serviceAccount:
  ## Specifies whether a ServiceAccount should be created
  ##
  create: false
  ## The name of the ServiceAccount to use.
  ## If not set and create is true, a name is generated using the kafka.serviceAccountName template
  ##
  name: default
  # Allows auto mount of ServiceAccountToken on the serviceAccount created
  # Can be set to false if pods using this serviceAccount do not need to use K8s API
  automountServiceAccountToken: true


## External Access to Kafka brokers configuration
externalAccess:
  ## Enable Kubernetes external cluster access to Kafka brokers
  enabled: true
## Parameters to configure K8s service(s) used to externally access Kafka brokers
  ## A new service per broker will be created
  service:
    ## Service type. Allowed values: LoadBalancer or NodePort
    type: NodePort
    nodePorts: [30016, 30017, 30018]
    useHostIPs: true

## Persistence parameters
# no persistance means that we get local-path ephemeral storage
persistence:
  enabled: false

## use retention hours to avoid over filling emptyDir
logRetentionHours: 24

## Tolerations
# the nodes assigned to kafka have taint nodetype=controlsKafka:NoSchedule
tolerations:
- key: "nodetype"
  operator: "Equal"
  value: "controlsKafka"
  effect: "NoSchedule"

## Affinity
affinity:
  nodeAffinity:
    requiredDuringSchedulingIgnoredDuringExecution:
      nodeSelectorTerms:
        - matchExpressions:
            - key: kubernetes.io/hostname
              operator: In
              values:
                - cs05r-sc-cloud-19.diamond.ac.uk
                - cs05r-sc-cloud-20.diamond.ac.uk
                - cs05r-sc-cloud-21.diamond.ac.uk
  podAntiAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
      # try not to run on a node already running kafka
      - podAffinityTerm:
          topologyKey: "kubernetes.io/hostname"
          labelSelector:
            matchExpressions:
              - key: "app.kubernetes.io/name"
                operator: In
                values:
                - kafka
        weight: 1
      # try not to run on a node already running kafka
      - podAffinityTerm:
          topologyKey: "kubernetes.io/hostname"
          labelSelector:
            matchExpressions:
              - key: "app.kubernetes.io/name"
                operator: In
                values:
                - zookeeper
        weight: 1


## Zookeeper
# this requrires the same affinity and tolerations as kafka servers
zookeeper:
  tolerations:
  - key: "nodetype"
    operator: "Equal"
    value: "controlsKafka"
    effect: "NoSchedule"
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
              - key: kubernetes.io/hostname
                operator: In
                values:
                  - cs05r-sc-cloud-19.diamond.ac.uk
                  - cs05r-sc-cloud-20.diamond.ac.uk
                  - cs05r-sc-cloud-21.diamond.ac.uk